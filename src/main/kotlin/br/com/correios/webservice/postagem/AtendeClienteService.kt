package br.com.correios.webservice.postagem

import java.net.MalformedURLException
import java.net.URL
import javax.xml.namespace.QName
import javax.xml.ws.*

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(
    name = "AtendeClienteService",
    targetNamespace = "http://cliente.bean.master.sigep.bsb.correios.com.br/",
    wsdlLocation = "https://apps.correios.com.br/SigepMasterJPA/AtendeClienteService/AtendeCliente?wsdl"
)
class AtendeClienteService : Service {
    companion object {
        private var ATENDECLIENTESERVICE_WSDL_LOCATION: URL? = null
        private var ATENDECLIENTESERVICE_EXCEPTION: WebServiceException? = null
        private val ATENDECLIENTESERVICE_QNAME =
            QName("http://cliente.bean.master.sigep.bsb.correios.com.br/", "AtendeClienteService")

        private fun __getWsdlLocation(): URL? {
            if (ATENDECLIENTESERVICE_EXCEPTION != null) {
                throw ATENDECLIENTESERVICE_EXCEPTION as WebServiceException
            }
            return ATENDECLIENTESERVICE_WSDL_LOCATION
        }

        init {
            var url: URL? = null
            var e: WebServiceException? = null
            try {
                url = URL("https://apps.correios.com.br/SigepMasterJPA/AtendeClienteService/AtendeCliente?wsdl")
            } catch (ex: MalformedURLException) {
                e = WebServiceException(ex)
            }
            ATENDECLIENTESERVICE_WSDL_LOCATION = url
            ATENDECLIENTESERVICE_EXCEPTION = e
        }
    }

    constructor() : super(__getWsdlLocation(), ATENDECLIENTESERVICE_QNAME) {}
    constructor(vararg features: WebServiceFeature?) : super(
        __getWsdlLocation(),
        ATENDECLIENTESERVICE_QNAME,
        *features
    )

    constructor(wsdlLocation: URL?) : super(wsdlLocation, ATENDECLIENTESERVICE_QNAME) {}
    constructor(wsdlLocation: URL?, vararg features: WebServiceFeature?) : super(
        wsdlLocation,
        ATENDECLIENTESERVICE_QNAME,
        *features
    )

    constructor(wsdlLocation: URL?, serviceName: QName?) : super(wsdlLocation, serviceName) {}
    constructor(wsdlLocation: URL?, serviceName: QName?, vararg features: WebServiceFeature?) : super(
        wsdlLocation,
        serviceName,
        *features
    )

    @get:WebEndpoint(name = "AtendeClientePort")
    val atendeClientePort: AtendeCliente
        get() = super.getPort(
            QName("http://cliente.bean.master.sigep.bsb.correios.com.br/", "AtendeClientePort"),
            AtendeCliente::class.java
        )


    @WebEndpoint(name = "AtendeClientePort")
    fun getAtendeClientePort(vararg features: WebServiceFeature?): AtendeCliente {
        return super.getPort(
            QName("http://cliente.bean.master.sigep.bsb.correios.com.br/", "AtendeClientePort"),
            AtendeCliente::class.java,
            *features
        )
    }
}